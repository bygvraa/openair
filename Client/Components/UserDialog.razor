<div class="modal fade show" id="myModal"
     style="display: block; background-color: rgba(247, 247, 247, .7);"
     aria-modal="true" role="dialog">

    <div class="modal-dialog">
        <div class="modal-content modal-openair">
            <div class="modal-header" style="border: none">
                <h4 class="modal-title">
                    @Title
                </h4>
                <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
            </div>

            <div class="modal-body">
                @switch (DialogType)
                {
                    case Type.DeleteCancel:
                        <div>
                            @Text
                        </div>
                        break;
                }
            </div>

            <div class="modal-footer" style="border: none">
                @switch (DialogType)
                {
                    case Type.Ok:
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>OK</button>
                        break;

                    case Type.OkCancel:
                        <button type="button" class="btn btn-warning" @onclick="@ModalCancel">Fortryd</button>
                        <button type="button" class="btn btn-primary" @onclick=@ModalOk>OK</button>
                        break;

                    case Type.DeleteCancel:
                        <button type="button" class="btn btn-warning" @onclick="@ModalCancel">Fortryd</button>
                        <button type="button" class="btn btn-danger" @onclick=@ModalOk>Slet</button>
                        break;
                }
            </div>

        </div>
    </div>

</div>

@code {
    [Parameter] public string Title { get; set; }
    [Parameter] public string Text { get; set; }

    [Parameter] public Type DialogType { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }


    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }


    // Bruges til at give muligheder for hvor mange knapper ModalDialog skal indeholde
    public enum Type
    {
        Ok,
        OkCancel,
        DeleteCancel
    }

}
