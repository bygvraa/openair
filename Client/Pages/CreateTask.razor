@page "/createtask"
@inject HttpClient Http
@inject NavigationManager UriHelper
@inject IJSRuntime js

<h3>Opret en vagt</h3>
<hr />

<div class="row" style=" text-align: center; place-content: center">
    <div class="col-md-4">
        <EditForm Model="task" OnValidSubmit="@(async () => await AddTask())">
            <div class="form-group">
                <input for="description" class="form-control" placeholder="Beskrivelse" @bind="@task.description" />
            </div>
            <div class="form-group">
                <input for="volunteer" class="form-control"
                       placeholder="Frivillig"
                       @bind="@task.volunteer" />
            </div>
            <div class="form-group">
                <input for="location" class="form-control"
                       placeholder="Lokation"
                       @bind="@task.location" />
            </div>
            <div class="form-group">
                <input for="starttime" class="form-control" type="datetime-local" min="@todayDateTime"
                       placeholder=""
                       @bind="@task.starttime" />
            </div>
            <div class="form-group">
                <input for="stoptime" class="form-control" type="datetime-local" min="@todayDateTime" />
            </div>
            <div class="form-group">
                <input type="reset" class="btn btn-danger" @onclick="@Cancel" value="Fortryd" />
                <input type="submit" class="btn btn-success" @onclick="@(async () => await AddTask())" value="Opret en vagt" />
            </div>
        </EditForm>

    </div>
</div>

@code {
    TaskClass task = new TaskClass();
    TaskClass[] tasks;

    string todayDateTime = DateTime.Now.ToString("yyyy-MM-ddThh:mm");

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(todayDateTime);
        tasks = await Http.GetFromJsonAsync<TaskClass[]>("Task");
    }

    protected async Task AddTask()
    {
        Console.WriteLine(task.stoptime);
        await Http.PostAsJsonAsync<TaskClass>("Task/", task);
    }

    void Cancel()
    {
        UriHelper.NavigateTo("/koordinator");
    }

}